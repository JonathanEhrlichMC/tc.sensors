library(tc.sensors)
?pull_sensor
library(tc.sensors)
?pull_sensor
library(tc.sensors)
?pull_sensor
library(tc.sensors)
?pull_sensor
?mean
?mutate
??mutate
?tidyverse
?gml
?glm
library(tc.sensors)
?pull_sensor
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
?pull_configuration
devtools::document()
devtools::document()
?pull_configuration
devtools::document()
?pull_configuration
devtools::document()
?pull_sensors
?pull_configuration
devtools::document()
?pull_configuration
install.packages("usethis")
usethis::use_lifecycle_badge()
?use_lifecycle_badge
library(sparklyr)
sc <- spark_connect(method = "databricks")
install.packages("Rcpp")
install.packages("Rcpp")
install.packages("Rcpp")
library(Rcpp)
sc <- spark_connect(method = "databricks")
library(sparklyr)
sc <- spark_connect(method = "databricks")
install.packages("SparkR")
library(Rcpp)
sc <- spark_connect(method = "databricks")
library(SparkR)
sc <- spark_connect(method = "databricks")
spark_install_find()
sc <- sparklyr::spark_connect(method = "databricks")
detach(SparkR)
library(sparklyr)
sc <- spark_connect(method ="databricks")
?spark_connect
spark_install_find()
sc <- spark_connect(method ="databricks", version = "2.3.3")
install.packages("sparklyr")
install.packages("sparklyr")
spark_install_find()
library(sparklyr)
spark_install_find()
sc <- spark_connect(method ="databricks")
6/5
6/5
15700/11
1427.273*5
7136.365/15700
.45/.55
.55/.45
15700/11
1427*5
96-9.6
3^3
3*3*6
ensure_group_vars <- function(loc, data, notify = TRUE) {
group_loc <- match(group_vars(data), names(data))
missing <- setdiff(group_loc, loc)
if (length(missing) > 0) {
vars <- names(data)[missing]
if (notify) {
inform(glue(
"Adding missing grouping variables: ",
paste0("`", names(data)[missing], "`", collapse = ", ")
))
}
loc <- c(set_names(missing, vars), loc)
}
loc
}
select.data.frame <- function(.data, ...) {
loc <- tidyselect::eval_select(expr(c(...)), .data)
loc <- ensure_group_vars(loc, .data, notify = TRUE)
set_names(.data[loc], names(loc))
}
select.list <- function(.data, ...) {
abort("`select()` doesn't handle lists.")
}
select <- function(.data, ...) {
UseMethod("select")
}
obj <- data.frame(A = c(1:3), B = c(1:3))
View(obj)
select(obj, A)
obj[[A]]
obj[[1]]
obj[[2]]
